generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Comment {
  authorId      Int
  createdAt     DateTime   @default(now())
  discussionId  Int
  id            Int        @id
  text          String
  User          User       @relation(fields: [authorId], references: [id])
  Discussion    Discussion @relation(fields: [discussionId], references: [id])
  parentComment Comment    @relation("CommentToComment_id", fields: [id], references: [id])
  childComment  Comment[]  @relation("CommentToComment_id")
}

model Community {
  createdAt                DateTime                   @default(now())
  creatorId                Int
  description              String?
  id                       Int                        @default(autoincrement()) @id
  name                     String
  url                      String                     @unique
  Creator                  User                       @relation("CreatorsOfCommunities", fields: [creatorId], references: [id])
  Subscribers              User[]                     @relation("SubscribersOfCommunities", references: [id])
  Discussion               Discussion[]
  SubscribersOfCommunities SubscribersOfCommunities[]
  CreatorsOfCommunities    CreatorsOfCommunities[]
}

model Discussion {
  authorId    Int
  body        String?
  communityId Int
  createdAt   DateTime  @default(now())
  id          Int       @default(autoincrement()) @id
  title       String
  User        User      @relation(fields: [authorId], references: [id])
  Community   Community @relation(fields: [communityId], references: [id])
  Comment     Comment[]
}

model Message {
  authorId             Int
  createdAt            DateTime               @default(now())
  id                   Int                    @default(autoincrement()) @id
  recipientId          Int
  text                 String
  Author               User                   @relation("AuthorsOfMessages", fields: [authorId], references: [id])
  Recipient            User                   @relation("RecipientsOfMessages", fields: [recipientId], references: [id])
  AuthorsOfMessages    AuthorsOfMessages[]
  RecipientsOfMessages RecipientsOfMessages[]
}

model User {
  age                      Int?
  createdAt                DateTime                   @default(now())
  email                    String                     @unique
  id                       Int                        @default(autoincrement()) @id
  name                     String
  handle                   String                     @unique
  Comment                  Comment[]
  CreatorOfCommunities     Community[]                @relation("CreatorsOfCommunities")
  SubscriberOfCommunities  Community[]                @relation("SubscribersOfCommunities", references: [id])
  Discussion               Discussion[]
  SentMessages             Message[]                  @relation("AuthorsOfMessages")
  ReceivedMessages         Message[]                  @relation("RecipientsOfMessages")
  SubscribersOfCommunities SubscribersOfCommunities[]
  CreatorsOfCommunities    CreatorsOfCommunities[]
  AuthorsOfMessages        AuthorsOfMessages[]
  RecipientsOfMessages     RecipientsOfMessages[]
}

enum Role {
  ADMIN
  USER
}

model SubscribersOfCommunities {
  Community   Community @relation(fields: [communityId], references: [id])
  communityId Int
  User        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  @@id([communityId, userId])
}

model CreatorsOfCommunities {
  Community   Community @relation(fields: [communityId], references: [id])
  communityId Int
  User        User      @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime  @default(now())
  @@id([communityId, userId])
}

model AuthorsOfMessages {
  Message   Message  @relation(fields: [messageId], references: [id])
  messageId Int
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  @@id([messageId, userId])
}

model RecipientsOfMessages {
  Message   Message  @relation(fields: [messageId], references: [id])
  messageId Int
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  @@id([messageId, userId])
}
