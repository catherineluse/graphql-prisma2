generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  authorId      Int
  createdAt     DateTime   @default(now())
  discussionId  Int
  id            Int        @id
  text          String
  User          User       @relation(fields: [authorId], references: [id])
  Discussion    Discussion @relation(fields: [discussionId], references: [id])
  Comment       Comment    @relation("CommentToComment_id", fields: [id], references: [id])
  other_Comment Comment[]  @relation("CommentToComment_id")
}

model Community {
  createdAt   DateTime     @default(now())
  creatorId   Int
  description String?
  id          Int          @default(autoincrement()) @id
  name        String
  url         String       @unique
  Creator     User         @relation(fields: [creatorId], references: [id])
  Discussion  Discussion[]
}

model Discussion {
  authorId    Int
  body        String?
  communityId Int
  createdAt   DateTime  @default(now())
  id          Int       @default(autoincrement()) @id
  title       String
  User        User      @relation(fields: [authorId], references: [id])
  Community   Community @relation(fields: [communityId], references: [id])
  Comment     Comment[]
}

model Message {
  authorId    Int
  createdAt   DateTime @default(now())
  id          Int      @id
  recipientId Int
  text        String
  User        User     @relation("Message_authorIdToUser", fields: [authorId], references: [id])
}

model User {
  age        Int?
  createdAt  DateTime     @default(now())
  email      String       @unique
  id         Int          @default(autoincrement()) @id
  name       String
  handle     String       @unique
  Comment    Comment[]
  Community  Community[]
  Discussion Discussion[]
  Message    Message[]    @relation("Message_authorIdToUser")
}

enum Role {
  ADMIN
  USER
}
